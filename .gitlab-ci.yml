stages:
  - build
  - test_prep
  - test
  - publish
  - trigger_prep
  - trigger

variables:
  GOLANG_VERSION:
    description: "The version of the image: `docker.io/library/golang` to use for testing"
    value: "1.21.1"

  DOCKER_REGISTRY: "docker.io"
  DOCKER_USERNAME: "TODO"  # REMOVE THIS VARIABLE
  DOCKER_PASSWORD: "FIXME" # REMOVE THIS VARIUBLE
  DOCKER_REPOSITORY: northerntechhq/nt-connect
  MULTIPLATFORM_TARGETS: 
    value: "linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7"

  GITHUB_STATUS_API_URL: "https://api.github.com/repos/NorthernTechHQ/$CI_PROJECT_NAME/statuses/$CI_COMMIT_SHA"

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-lint.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests-v2.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'
  - remote: 'https://raw.githubusercontent.com/mendersoftware/mendertesting/e03d921dfed6022dcff61dec2057d473f02939c3/.gitlab-ci-docker-build-multiplatform.yml'

test:unit:
  image: "golang:${GOLANG_VERSION}"
  stage: test
  before_script:
    - apt-get -qq update && apt-get install -yq $(cat deb-requirements.txt)
    # start the dbus service
    - service dbus start
